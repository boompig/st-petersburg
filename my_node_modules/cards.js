function Card (name, cost, coinYield, pointYield, type) {
    this.name = name;
    this.cost = cost;
    this.pointYield = pointYield;
    this.coinYield = coinYield;
    this.type = type;
};

Card.locations = {
    HAND: 1,
    UPPER_BOARD: 2,
    LOWER_BOARD: 3,
};

Card.types = {
    WORKER: 1,
    BUILDING: 2,
    ARISTOCRAT: 3,
    UPGRADE: 4
};

Card.prototype.getCost = function (location) {
    if (location === Card.locations.LOWER_BOARD) {
        return Math.max(this.cost - 1, 1);
    } else {
        return this.cost;
    }
};

Card.prototype.canEvalNow = function (phase) {
    //TODO for now
    return this.type === phase;
};

// just a list of all the cards, for easy access
var cards = {
    // workers
    lumberjack: new Card("Lumberjack", 3, 3, 0, Card.types.WORKER),
    gold_miner: new Card("Gold Miner", 4, 3, 0, Card.types.WORKER),
    shepherd: new Card("Shepherd", 5, 3, 0, Card.types.WORKER),
    fur_trapper: new Card("Fur Trapper", 6, 3, 0, Card.types.WORKER),
    // buildings
    market: new Card("Market", 5, 0, 1, Card.types.BUILDING),
    customs_house: new Card("Customs House", 8, 0, 2, Card.types.BUILDING),
    firehouse: new Card("Firehouse", 11, 0, 3, Card.types.BUILDING),
    hospital: new Card("Hospital", 14, 0, 4, Card.types.BUILDING),
};

exports.Card = Card;
exports.cards = cards;
