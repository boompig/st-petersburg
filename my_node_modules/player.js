var Card = require("./cards.js").Card;

/**
 * A player, as represented in a normal St. Petersburg game
 * No custom modifications have been made to distinguish between AI and human
 */
function Player () {
    this.hand = [];
    this.cards = [];
    this.points = 0;
    this.coins = 0;
};

Player.prototype.clone = function () {
    var p = new Player();
    p.hand = this.hand.slice();
    p.cards = this.cards.slice();
    p.points = this.points;
    p.coins = this.coins;
    return p;
};

Player.prototype.canAffordCard = function (card, location) {
    return card.getCost(location) <= this.coins;
};

Player.prototype.getMaxHandSize = function () {
    return 3;
};

Player.prototype.canPutCardInHand = function () {
    return this.hand.length < this.getMaxHandSize();
};

Player.prototype.buyCard = function (card, location) {
    if (this.canAffordCard(card, location)) {
        this.cards.push(card);
        this.coins -= card.getCost(location);
        return true;
    } else {
        return false;
    }
};

Player.prototype.putCardInHand = function (card) {
    if (this.canPutCardInHand()) {
        this.hand.push(card);
        return true;
    } else {
        return false;
    }
};

/**
 * Play the given card from the player's hand
 * Return true if successful, false otherwise
 * On success, remove the card from player's hand
 */
Player.prototype.playCardFromHand = function (card) {
    var i = this.hand.indexOf(card);
    if (i >= 0) {
        var result = this.buyCard(card, Card.locations.HAND);
        if (result) {
            this.hand.splice(i, 1);
        }
    } else {
        return false;
    }
};

exports.Player = Player;
